-- ============================================================
-- existing_db_fix.sql
-- –°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ë–î —Å –ø—Ä–æ–±–ª–µ–º–Ω—ã–º–∏ –º–∏–≥—Ä–∞—Ü–∏—è–º–∏
-- –í–ù–ò–ú–ê–ù–ò–ï: –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å–æ–∑–¥–∞–π—Ç–µ –±—ç–∫–∞–ø –ø–µ—Ä–µ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ–º!
-- ============================================================

DO $$ 
BEGIN
    RAISE NOTICE 'üî• –ù–ê–ß–ê–õ–û –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –°–£–©–ï–°–¢–í–£–Æ–©–ï–ô –ë–î';
    RAISE NOTICE '‚ö†Ô∏è  –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ —Å–æ–∑–¥–∞–Ω –±—ç–∫–∞–ø!';
END $$;

-- ========================================
-- –®–ê–ì 1: –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ù–ï–ü–†–ê–í–ò–õ–¨–ù–´–• –°–°–´–õ–û–ö
-- ========================================

DO $$
BEGIN
    RAISE NOTICE 'üìù –®–∞–≥ 1: –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –≤–Ω–µ—à–Ω–∏—Ö –∫–ª—é—á–µ–π...';
    
    -- –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É –≤ orders.tenant_id
    IF EXISTS (
        SELECT 1 FROM information_schema.table_constraints 
        WHERE constraint_name LIKE '%orders_tenant_id%' 
        AND table_name = 'orders'
    ) THEN
        -- –£–¥–∞–ª—è–µ–º –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É
        ALTER TABLE orders DROP CONSTRAINT IF EXISTS orders_tenant_id_fkey;
        
        -- –°–æ–∑–¥–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É –Ω–∞ tenants
        IF EXISTS (SELECT 1 FROM information_schema.tables WHERE table_name = 'tenants') THEN
            ALTER TABLE orders ADD CONSTRAINT orders_tenant_id_fkey 
                FOREIGN KEY (tenant_id) REFERENCES tenants(id);
            RAISE NOTICE '‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ —Å—Å—ã–ª–∫–∞ orders.tenant_id -> tenants(id)';
        END IF;
    END IF;
    
EXCEPTION WHEN OTHERS THEN
    RAISE NOTICE '‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ —Å—Å—ã–ª–æ–∫: %', SQLERRM;
END $$;

-- ========================================
-- –®–ê–ì 2: –£–î–ê–õ–ï–ù–ò–ï –î–£–ë–õ–ò–†–£–Æ–©–ò–• –ö–û–õ–û–ù–û–ö
-- ========================================

DO $$
DECLARE
    col_exists BOOLEAN;
BEGIN
    RAISE NOTICE 'üìù –®–∞–≥ 2: –£–¥–∞–ª–µ–Ω–∏–µ –¥—É–±–ª–∏—Ä—É—é—â–∏—Ö –∫–æ–ª–æ–Ω–æ–∫...';
    
    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ —É–¥–∞–ª—è–µ–º –¥—É–±–ª–∏—Ä—É—é—â–∏–µ –ø–æ–ª—è –≤ products
    SELECT EXISTS (
        SELECT 1 FROM information_schema.columns 
        WHERE table_name = 'products' AND column_name = 'popularity_score'
    ) INTO col_exists;
    
    IF col_exists THEN
        -- –ï—Å–ª–∏ –µ—Å—Ç—å –¥—É–±–ª–∏, –æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Å—Ç–æ–ª–±–µ—Ü
        -- –≠—Ç–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ –¥–µ–ª–∞—Ç—å —á–µ—Ä–µ–∑ —É—Å–ª–æ–≤–Ω—É—é –ª–æ–≥–∏–∫—É
        RAISE NOTICE '‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω–æ –ø–æ–ª–µ popularity_score –≤ products - –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –¥—É–±–ª–∏';
    END IF;
    
    -- –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ –¥–ª—è –¥—Ä—É–≥–∏—Ö –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ –¥—É–±–ª–∏—Ä—É—é—â–∏—Ö –ø–æ–ª–µ–π
    SELECT EXISTS (
        SELECT 1 FROM information_schema.columns 
        WHERE table_name = 'users' AND column_name = 'name'
    ) INTO col_exists;
    
    IF col_exists THEN
        RAISE NOTICE '‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω–æ –ø–æ–ª–µ name –≤ users - –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –¥—É–±–ª–∏';
    END IF;
    
END $$;

-- ========================================
-- –®–ê–ì 3: –£–î–ê–õ–ï–ù–ò–ï –î–£–ë–õ–ò–†–£–Æ–©–ò–• –¢–ê–ë–õ–ò–¶
-- ========================================

DO $$
BEGIN
    RAISE NOTICE 'üìù –®–∞–≥ 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥—É–±–ª–∏—Ä—É—é—â–∏—Ö —Ç–∞–±–ª–∏—Ü...';
    
    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∏ transactions, –∏ billing_transactions
    IF EXISTS (SELECT 1 FROM information_schema.tables WHERE table_name = 'transactions') 
       AND EXISTS (SELECT 1 FROM information_schema.tables WHERE table_name = 'billing_transactions') THEN
        
        RAISE NOTICE '‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω—ã –æ–±–µ —Ç–∞–±–ª–∏—Ü—ã: transactions –∏ billing_transactions';
        RAISE NOTICE 'üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –ø–µ—Ä–µ–Ω–µ—Å—Ç–∏ –¥–∞–Ω–Ω—ã–µ –∏–∑ transactions –≤ billing_transactions';
        RAISE NOTICE 'üí° –ò —É–¥–∞–ª–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É transactions –ø–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏';
        
        -- –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–µ—Ä–µ–Ω–æ—Å –¥–∞–Ω–Ω—ã—Ö –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        -- INSERT INTO billing_transactions (tenant_id, type, amount, description, created_at)
        -- SELECT tenant_id, type, amount, description, created_at FROM transactions;
        
    END IF;
    
    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ user_sessions
    IF EXISTS (
        SELECT table_name, COUNT(*) 
        FROM information_schema.tables 
        WHERE table_name = 'user_sessions' 
        GROUP BY table_name 
        HAVING COUNT(*) > 1
    ) THEN
        RAISE NOTICE '‚ö†Ô∏è  –í–æ–∑–º–æ–∂–Ω–æ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã user_sessions';
    END IF;
    
END $$;

-- ========================================
-- –®–ê–ì 4: –û–ß–ò–°–¢–ö–ê –î–£–ë–õ–ò–†–£–Æ–©–ò–• –§–£–ù–ö–¶–ò–ô
-- ========================================

DO $$
BEGIN
    RAISE NOTICE 'üìù –®–∞–≥ 4: –û—á–∏—Å—Ç–∫–∞ –¥—É–±–ª–∏—Ä—É—é—â–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π...';
    
    -- –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –≤–µ—Ä—Å–∏–∏ —Ñ—É–Ω–∫—Ü–∏–π update_updated_at
    DROP FUNCTION IF EXISTS public.update_tariffs_updated_at_column() CASCADE;
    DROP FUNCTION IF EXISTS update_tariffs_updated_at_column() CASCADE;
    
    -- –°–æ–∑–¥–∞–µ–º –µ–¥–∏–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    CREATE OR REPLACE FUNCTION update_updated_at_column()
    RETURNS TRIGGER AS $func$
    BEGIN
        NEW.updated_at = CURRENT_TIMESTAMP;
        RETURN NEW;
    END;
    $func$ language 'plpgsql';
    
    RAISE NOTICE '‚úÖ –°–æ–∑–¥–∞–Ω–∞ –µ–¥–∏–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è update_updated_at_column()';
    
    -- –£–¥–∞–ª—è–µ–º –¥—É–±–ª–∏—Ä—É—é—â–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ —Ü–µ–Ω
    DROP FUNCTION IF EXISTS calculate_normalized_price() CASCADE;
    
    -- –°–æ–∑–¥–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –≤–µ—Ä—Å–∏—é
    CREATE OR REPLACE FUNCTION calculate_normalized_price()
    RETURNS TRIGGER AS $func$
    BEGIN
        IF NEW.supplier_multiplicity IS NOT NULL AND NEW.supplier_multiplicity > 0 THEN
            NEW.normalized_price = NEW.price / NEW.supplier_multiplicity;
        ELSE
            NEW.normalized_price = NEW.price;
        END IF;
        RETURN NEW;
    END;
    $func$ language 'plpgsql';
    
    RAISE NOTICE '‚úÖ –°–æ–∑–¥–∞–Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è calculate_normalized_price()';
    
END $$;

-- ========================================
-- –®–ê–ì 5: –ü–ï–†–ï–°–û–ó–î–ê–ù–ò–ï –¢–†–ò–ì–ì–ï–†–û–í
-- ========================================

DO $$
DECLARE
    table_record RECORD;
    trigger_count INTEGER;
BEGIN
    RAISE NOTICE 'üìù –®–∞–≥ 5: –ü–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–µ —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤ updated_at...';
    
    -- –°–ø–∏—Å–æ–∫ —Ç–∞–±–ª–∏—Ü, –∫–æ—Ç–æ—Ä—ã–º –Ω—É–∂–Ω—ã —Ç—Ä–∏–≥–≥–µ—Ä—ã updated_at
    FOR table_record IN 
        SELECT table_name 
        FROM information_schema.tables 
        WHERE table_schema = 'public' 
        AND table_name IN ('tariffs', 'tenants', 'users', 'products', 'orders', 'user_sessions', 
                          'product_suppliers', 'marketplace_product_links', 'billing_transactions',
                          'brand_content_sources', 'exchange_rates')
        AND EXISTS (
            SELECT 1 FROM information_schema.columns 
            WHERE table_name = table_record.table_name 
            AND column_name = 'updated_at'
        )
    LOOP
        -- –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —Ç—Ä–∏–≥–≥–µ—Ä—ã
        EXECUTE format('DROP TRIGGER IF EXISTS update_%s_updated_at ON %I', 
                      table_record.table_name, table_record.table_name);
        
        -- –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Ç—Ä–∏–≥–≥–µ—Ä
        EXECUTE format('CREATE TRIGGER update_%s_updated_at 
                       BEFORE UPDATE ON %I 
                       FOR EACH ROW EXECUTE FUNCTION update_updated_at_column()',
                      table_record.table_name, table_record.table_name);
        
        RAISE NOTICE '‚úÖ –°–æ–∑–¥–∞–Ω —Ç—Ä–∏–≥–≥–µ—Ä –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã %', table_record.table_name;
    END LOOP;
    
END $$;

-- ========================================
-- –®–ê–ì 6: –ü–†–û–í–ï–†–ö–ê –¶–ï–õ–û–°–¢–ù–û–°–¢–ò –î–ê–ù–ù–´–•
-- ========================================

DO $$
DECLARE
    missing_tables TEXT[] := ARRAY[]::TEXT[];
    table_name TEXT;
BEGIN
    RAISE NOTICE 'üìù –®–∞–≥ 6: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ë–î...';
    
    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü
    FOREACH table_name IN ARRAY ARRAY['tenants', 'users', 'products', 'orders', 'tariffs']
    LOOP
        IF NOT EXISTS (SELECT 1 FROM information_schema.tables WHERE table_name = table_name) THEN
            missing_tables := array_append(missing_tables, table_name);
        END IF;
    END LOOP;
    
    IF array_length(missing_tables, 1) > 0 THEN
        RAISE NOTICE '‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã: %', array_to_string(missing_tables, ', ');
        RAISE NOTICE 'üí° –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å 001_consolidated_schema.sql –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö —Ç–∞–±–ª–∏—Ü';
    ELSE
        RAISE NOTICE '‚úÖ –í—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç';
    END IF;
    
END $$;

-- ========================================
-- –®–ê–ì 7: –î–û–ë–ê–í–õ–ï–ù–ò–ï –ù–ï–î–û–°–¢–ê–Æ–©–ò–• –ü–û–õ–ï–ô
-- ========================================

DO $$
BEGIN
    RAISE NOTICE 'üìù –®–∞–≥ 7: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö –ø–æ–ª–µ–π...';
    
    -- –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –ø–æ–ª—è –≤ tenants –¥–ª—è –±–∏–ª–ª–∏–Ω–≥–∞
    IF EXISTS (SELECT 1 FROM information_schema.tables WHERE table_name = 'tenants') THEN
        
        ALTER TABLE tenants ADD COLUMN IF NOT EXISTS tariff_id UUID;
        ALTER TABLE tenants ADD COLUMN IF NOT EXISTS subscription_id VARCHAR(255);
        ALTER TABLE tenants ADD COLUMN IF NOT EXISTS subscription_status VARCHAR(50) DEFAULT 'inactive';
        ALTER TABLE tenants ADD COLUMN IF NOT EXISTS subscription_end_date TIMESTAMP;
        ALTER TABLE tenants ADD COLUMN IF NOT EXISTS balance DECIMAL(10,2) DEFAULT 0.00;
        ALTER TABLE tenants ADD COLUMN IF NOT EXISTS stripe_customer_id VARCHAR(255);
        
        -- –î–æ–±–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ tariffs –µ—Å–ª–∏ —Ç–∞–±–ª–∏—Ü–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        IF EXISTS (SELECT 1 FROM information_schema.tables WHERE table_name = 'tariffs') THEN
            ALTER TABLE tenants ADD CONSTRAINT tenants_tariff_id_fkey 
                FOREIGN KEY (tariff_id) REFERENCES tariffs(id) 
                ON DELETE SET NULL;
        END IF;
        
        RAISE NOTICE '‚úÖ –î–æ–±–∞–≤–ª–µ–Ω—ã –ø–æ–ª—è –±–∏–ª–ª–∏–Ω–≥–∞ –≤ tenants';
    END IF;
    
    -- –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –ø–æ–ª—è –≤ users
    IF EXISTS (SELECT 1 FROM information_schema.tables WHERE table_name = 'users') THEN
        ALTER TABLE users ADD COLUMN IF NOT EXISTS first_name VARCHAR(100);
        ALTER TABLE users ADD COLUMN IF NOT EXISTS last_name VARCHAR(100);
        ALTER TABLE users ADD COLUMN IF NOT EXISTS name VARCHAR(255);
        
        RAISE NOTICE '‚úÖ –î–æ–±–∞–≤–ª–µ–Ω—ã –ø–æ–ª—è –∏–º–µ–Ω –≤ users';
    END IF;
    
    -- –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –ø–æ–ª—è –≤ products
    IF EXISTS (SELECT 1 FROM information_schema.tables WHERE table_name = 'products') THEN
        ALTER TABLE products ADD COLUMN IF NOT EXISTS popularity_score INTEGER DEFAULT 0;
        ALTER TABLE products ADD COLUMN IF NOT EXISTS weight DECIMAL(10,3);
        ALTER TABLE products ADD COLUMN IF NOT EXISTS volume DECIMAL(10,4);
        ALTER TABLE products ADD COLUMN IF NOT EXISTS dimensions JSONB;
        ALTER TABLE products ADD COLUMN IF NOT EXISTS is_divisible BOOLEAN DEFAULT TRUE;
        ALTER TABLE products ADD COLUMN IF NOT EXISTS base_unit VARCHAR(20) DEFAULT '—à—Ç';
        ALTER TABLE products ADD COLUMN IF NOT EXISTS min_order_quantity DECIMAL(10,2) DEFAULT 1;
        ALTER TABLE products ADD COLUMN IF NOT EXISTS packaging_info JSONB DEFAULT '{}';
        ALTER TABLE products ADD COLUMN IF NOT EXISTS cable_info JSONB DEFAULT '{}';
        
        RAISE NOTICE '‚úÖ –î–æ–±–∞–≤–ª–µ–Ω—ã –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –ø–æ–ª—è –≤ products';
    END IF;
    
END $$;

-- ========================================
-- –®–ê–ì 8: –°–û–ó–î–ê–ù–ò–ï –ù–ï–î–û–°–¢–ê–Æ–©–ò–• –ò–ù–î–ï–ö–°–û–í
-- ========================================

DO $$
BEGIN
    RAISE NOTICE 'üìù –®–∞–≥ 8: –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö –∏–Ω–¥–µ–∫—Å–æ–≤...';
    
    -- –°–æ–∑–¥–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –∏–Ω–¥–µ–∫—Å—ã –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
    CREATE INDEX IF NOT EXISTS idx_users_tenant_id ON users(tenant_id);
    CREATE INDEX IF NOT EXISTS idx_products_tenant_id ON products(tenant_id);
    CREATE INDEX IF NOT EXISTS idx_products_is_active ON products(is_active);
    CREATE INDEX IF NOT EXISTS idx_orders_tenant_id ON orders(tenant_id);
    CREATE INDEX IF NOT EXISTS idx_orders_status ON orders(status);
    CREATE INDEX IF NOT EXISTS idx_user_sessions_user_id ON user_sessions(user_id);
    CREATE INDEX IF NOT EXISTS idx_user_sessions_expires ON user_sessions(expires_at);
    
    -- –ò–Ω–¥–µ–∫—Å—ã –¥–ª—è –±–∏–ª–ª–∏–Ω–≥–∞
    IF EXISTS (SELECT 1 FROM information_schema.tables WHERE table_name = 'billing_transactions') THEN
        CREATE INDEX IF NOT EXISTS idx_billing_transactions_tenant_id ON billing_transactions(tenant_id);
        CREATE INDEX IF NOT EXISTS idx_billing_transactions_status ON billing_transactions(status);
        CREATE INDEX IF NOT EXISTS idx_billing_transactions_created ON billing_transactions(created_at);
    END IF;
    
    -- –ò–Ω–¥–µ–∫—Å—ã –¥–ª—è —Ç–µ–Ω–∞–Ω—Ç–æ–≤
    CREATE INDEX IF NOT EXISTS idx_tenants_tariff_id ON tenants(tariff_id);
    CREATE INDEX IF NOT EXISTS idx_tenants_subscription_status ON tenants(subscription_status);
    
    RAISE NOTICE '‚úÖ –ò–Ω–¥–µ–∫—Å—ã —Å–æ–∑–¥–∞–Ω—ã/–ø—Ä–æ–≤–µ—Ä–µ–Ω—ã';
    
END $$;

-- ========================================
-- –®–ê–ì 9: –í–ê–õ–ò–î–ê–¶–ò–Ø –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô
-- ========================================

DO $$
DECLARE
    table_count INTEGER;
    function_count INTEGER;
    trigger_count INTEGER;
    index_count INTEGER;
BEGIN
    RAISE NOTICE 'üìù –®–∞–≥ 9: –§–∏–Ω–∞–ª—å–Ω–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è...';
    
    -- –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã
    SELECT COUNT(*) INTO table_count 
    FROM information_schema.tables 
    WHERE table_schema = 'public' AND table_type = 'BASE TABLE';
    
    SELECT COUNT(*) INTO function_count 
    FROM information_schema.routines 
    WHERE routine_schema = 'public' AND routine_type = 'FUNCTION';
    
    SELECT COUNT(*) INTO trigger_count 
    FROM information_schema.triggers 
    WHERE trigger_schema = 'public';
    
    SELECT COUNT(*) INTO index_count 
    FROM pg_indexes 
    WHERE schemaname = 'public';
    
    RAISE NOTICE 'üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ë–î:';
    RAISE NOTICE '   üìã –¢–∞–±–ª–∏—Ü: %', table_count;
    RAISE NOTICE '   üîß –§—É–Ω–∫—Ü–∏–π: %', function_count;
    RAISE NOTICE '   ‚ö° –¢—Ä–∏–≥–≥–µ—Ä–æ–≤: %', trigger_count;
    RAISE NOTICE '   üìá –ò–Ω–¥–µ–∫—Å–æ–≤: %', index_count;
    
END $$;

-- ========================================
-- –®–ê–ì 10: –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò
-- ========================================

DO $$
BEGIN
    RAISE NOTICE 'üìù –®–∞–≥ 10: –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –¥–∞–ª—å–Ω–µ–π—à–∏–º –¥–µ–π—Å—Ç–≤–∏—è–º...';
    RAISE NOTICE '';
    RAISE NOTICE 'üéØ –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:';
    RAISE NOTICE '1. ‚úÖ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è';
    RAISE NOTICE '2. üß™ –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Ç–µ—Å—Ç—ã';
    RAISE NOTICE '3. üìä –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∑–∞–ø—Ä–æ—Å–æ–≤';
    RAISE NOTICE '4. üóëÔ∏è  –£–¥–∞–ª–∏—Ç–µ —Å—Ç–∞—Ä—ã–µ –º–∏–≥—Ä–∞—Ü–∏–∏-–¥—É–±–ª–∏:';
    RAISE NOTICE '   - 016_add_missing_tables.sql';
    RAISE NOTICE '   - 017_fix_missing_tables.sql';
    RAISE NOTICE '   - 017_add_functions_and_triggers.sql';
    RAISE NOTICE '5. üìù –û–±–Ω–æ–≤–∏—Ç–µ —Å–∏—Å—Ç–µ–º—É –º–∏–≥—Ä–∞—Ü–∏–π';
    RAISE NOTICE '';
    RAISE NOTICE '‚ö†Ô∏è  –í–ê–ñ–ù–û:';
    RAISE NOTICE '- –°–ª–µ–¥–∏—Ç–µ –∑–∞ –ª–æ–≥–∞–º–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è';
    RAISE NOTICE '- –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤—Å–µ API endpoints';
    RAISE NOTICE '- –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç';
    RAISE NOTICE '- –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–∑–¥–∞–Ω–∏–µ/–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö';
    RAISE NOTICE '';
    
END $$;

-- ========================================
-- –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê
-- ========================================

DO $$
DECLARE
    error_count INTEGER := 0;
    warning_count INTEGER := 0;
BEGIN
    RAISE NOTICE 'üîç –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –¶–ï–õ–û–°–¢–ù–û–°–¢–ò...';
    
    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Ç–∞–±–ª–∏—Ü
    IF NOT EXISTS (SELECT 1 FROM information_schema.tables WHERE table_name = 'tenants') THEN
        RAISE NOTICE '‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: —Ç–∞–±–ª–∏—Ü–∞ tenants –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç';
        error_count := error_count + 1;
    END IF;
    
    IF NOT EXISTS (SELECT 1 FROM information_schema.tables WHERE table_name = 'users') THEN
        RAISE NOTICE '‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: —Ç–∞–±–ª–∏—Ü–∞ users –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç';
        error_count := error_count + 1;
    END IF;
    
    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
    IF NOT EXISTS (SELECT 1 FROM information_schema.routines WHERE routine_name = 'update_updated_at_column') THEN
        RAISE NOTICE '‚ö†Ô∏è  –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: —Ñ—É–Ω–∫—Ü–∏—è update_updated_at_column –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç';
        warning_count := warning_count + 1;
    END IF;
    
    -- –ò—Ç–æ–≥–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å
    IF error_count = 0 THEN
        RAISE NOTICE '';
        RAISE NOTICE 'üéâ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û –£–°–ü–ï–®–ù–û!';
        RAISE NOTICE '‚úÖ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫: %', error_count;
        RAISE NOTICE '‚ö†Ô∏è  –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π: %', warning_count;
        RAISE NOTICE '';
        RAISE NOTICE 'üöÄ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ!';
    ELSE
        RAISE NOTICE '';
        RAISE NOTICE '‚ùå –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û –° –û–®–ò–ë–ö–ê–ú–ò!';
        RAISE NOTICE '‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫: %', error_count;
        RAISE NOTICE '‚ö†Ô∏è  –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π: %', warning_count;
        RAISE NOTICE '';
        RAISE NOTICE 'üîß –¢—Ä–µ–±—É–µ—Ç—Å—è —Ä—É—á–Ω–æ–µ –≤–º–µ—à–∞—Ç–µ–ª—å—Å—Ç–≤–æ!';
    END IF;
    
END $$;