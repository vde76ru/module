# ============================================
# NGINX CONFIGURATION FOR MODULETRADE
# ============================================

user nginx;
worker_processes auto;
worker_rlimit_nofile 65535;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # ========================================
    # CORS MAPPING (ДОЛЖНО БЫТЬ В HTTP БЛОКЕ)
    # ========================================
    map $http_origin $cors_origin {
        default "";
        "~^https://moduletrade.ru$" $http_origin;
        "~^https://www.moduletrade.ru$" $http_origin;
        "~^https://api.moduletrade.ru$" $http_origin;
        "~^http://localhost:8080$" $http_origin;
        "~^http://localhost:3000$" $http_origin;
        "~^http://127\.0\.0\.1:8080$" $http_origin;
        "~^http://127\.0\.0\.1:3000$" $http_origin;
    }

    # ========================================
    # LOGGING
    # ========================================
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    # ========================================
    # PERFORMANCE SETTINGS
    # ========================================
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;
    client_max_body_size 100M;
    client_body_buffer_size 128k;

    # ========================================
    # GZIP COMPRESSION
    # ========================================
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # ========================================
    # SECURITY HEADERS
    # ========================================
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Менее строгий CSP для React приложения
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdnjs.cloudflare.com; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https://api.moduletrade.ru http://localhost:3000 wss:; frame-ancestors 'self';" always;

    # ========================================
    # UPSTREAM DEFINITIONS
    # ========================================
    upstream backend {
        server backend:3000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream frontend {
        server frontend:80 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # ========================================
    # RATE LIMITING
    # ========================================
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=3r/s;

    # ========================================
    # HTTP REDIRECT TO HTTPS
    # ========================================
    server {
        listen 80;
        server_name moduletrade.ru www.moduletrade.ru api.moduletrade.ru;
        return 301 https://$host$request_uri;
    }

    # ========================================
    # MAIN DOMAIN (moduletrade.ru) - FRONTEND + API
    # ========================================
    server {
        listen 443 ssl;
        http2 on;
        server_name moduletrade.ru www.moduletrade.ru api.moduletrade.ru;

        # SSL Configuration
        ssl_certificate /etc/nginx/certs/moduletrade.ru.crt;
        ssl_certificate_key /etc/nginx/certs/moduletrade.ru.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        # ========================================
        # КРИТИЧЕСКОЕ ИСПРАВЛЕНИЕ: Обработка /auth/ маршрутов
        # ========================================
        location /auth/ {
            # Перенаправляем на правильный API endpoint
            rewrite ^/auth/(.*)$ /api/auth/$1 break;

            limit_req zone=login burst=10 nodelay;
            limit_req_status 429;

            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # ========================================
        # API ENDPOINTS
        # ========================================

        # Специальное ограничение для API аутентификации
        location /api/auth/login {
            limit_req zone=login burst=5 nodelay;
            limit_req_status 429;

            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Специальное ограничение для регистрации
        location = /api/auth/register {
            limit_req zone=login burst=10 nodelay;
            limit_req_status 429;

            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # General API rate limiting
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            limit_req_status 429;

            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Health check endpoint
        location /health {
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            access_log off;
        }

        # Frontend static files
        location / {
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
    }
}