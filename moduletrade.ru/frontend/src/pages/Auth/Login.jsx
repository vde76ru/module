import React, { useState, useEffect } from 'react';
import { Form, Input, Button, Card, Typography, Checkbox, Alert, Spin } from 'antd';
import { UserOutlined, LockOutlined } from '@ant-design/icons';
import { useDispatch, useSelector } from 'react-redux';
import { useNavigate, Link } from 'react-router-dom';
import { loginUser, clearError } from '../../store/authSlice';
import './Login.css';

const { Title, Text } = Typography;

const Login = () => {
  const [form] = Form.useForm();
  const dispatch = useDispatch();
  const navigate = useNavigate();
  const { loading, error, isAuthenticated } = useSelector((state) => state.auth);

  // ‚úÖ –î–û–ë–ê–í–õ–ï–ù–û: –û—á–∏—Å—Ç–∫–∞ –æ—à–∏–±–æ–∫ –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    return () => {
      dispatch(clearError());
    };
  }, [dispatch]);

  // ‚úÖ –î–û–ë–ê–í–õ–ï–ù–û: –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω
  useEffect(() => {
    if (isAuthenticated) {
      navigate('/dashboard', { replace: true });
    }
  }, [isAuthenticated, navigate]);

  const onFinish = async (values) => {
    try {
      // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –û—á–∏—â–∞–µ–º –æ—à–∏–±–∫–∏ –ø–µ—Ä–µ–¥ –Ω–æ–≤–æ–π –ø–æ–ø—ã—Ç–∫–æ–π –≤—Ö–æ–¥–∞
      dispatch(clearError());
      
      const result = await dispatch(loginUser({
        email: values.email,
        password: values.password,
        rememberMe: values.remember
      })).unwrap();

      // ‚úÖ –£–õ–£–ß–®–ï–ù–û: –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ –æ—Ç–≤–µ—Ç–µ
      if (result && result.user) {
        console.log('‚úÖ Login successful:', result.user);
        navigate('/dashboard', { replace: true });
      } else {
        console.error('‚ùå Login failed: No user data in response');
      }
    } catch (error) {
      console.error('‚ùå Login failed:', error);
      // –û—à–∏–±–∫–∞ —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ –≤ authSlice
    }
  };

  return (
    <div className="login-container">
      <div className="login-background">
        <div className="login-content">
          {/* –õ–µ–≤–∞—è —á–∞—Å—Ç—å - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–º–ø–∞–Ω–∏–∏ */}
          <div className="login-info">
            <div className="logo-section">
              <img
                src="/logo.png"
                alt="ModuleTrade"
                className="login-logo"
              />
              <Title level={1} className="brand-title">
                ModuleTrade
              </Title>
              <Text className="brand-subtitle">
                SaaS-–ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞–º–∏ –∏ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞–º–∏
              </Text>
            </div>

            <div className="features-section">
              <div className="feature-item">
                <div className="feature-icon">üè™</div>
                <div>
                  <Title level={4}>–ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å—ã</Title>
                  <Text>Ozon, Wildberries, Yandex Market</Text>
                </div>
              </div>

              <div className="feature-item">
                <div className="feature-icon">üì¶</div>
                <div>
                  <Title level={4}>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞–º–∏</Title>
                  <Text>PIM —Å–∏—Å—Ç–µ–º–∞ —Å –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–µ–π –¥–∞–Ω–Ω—ã—Ö</Text>
                </div>
              </div>

              <div className="feature-item">
                <div className="feature-icon">üè≠</div>
                <div>
                  <Title level={4}>–ü–æ—Å—Ç–∞–≤—â–∏–∫–∏</Title>
                  <Text>ETM, RS24, —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ API</Text>
                </div>
              </div>
            </div>
          </div>

          {/* –ü—Ä–∞–≤–∞—è —á–∞—Å—Ç—å - —Ñ–æ—Ä–º–∞ –≤—Ö–æ–¥–∞ */}
          <div className="login-form-section">
            <Card className="login-card">
              <div className="login-header">
                <Title level={2}>–í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É</Title>
                <Text type="secondary">
                  –í–æ–π–¥–∏—Ç–µ –≤ —Å–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã
                </Text>
              </div>

              {error && (
                <Alert
                  message="–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞"
                  description={error}
                  type="error"
                  showIcon
                  style={{ marginBottom: 24 }}
                  closable
                  onClose={() => dispatch(clearError())}
                />
              )}

              <Form
                form={form}
                name="login-form"
                onFinish={onFinish}
                autoComplete="on"
                size="large"
                layout="vertical"
                className="login-form"
              >
                <Form.Item
                  label="Email"
                  name="email"
                  rules={[
                    {
                      required: true,
                      message: '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ email!',
                    },
                    {
                      type: 'email',
                      message: '–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email!',
                    },
                  ]}
                >
                  <Input
                    prefix={<UserOutlined />}
                    placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à email"
                    autoComplete="email"
                    autoFocus
                    disabled={loading}
                  />
                </Form.Item>

                <Form.Item
                  label="–ü–∞—Ä–æ–ª—å"
                  name="password"
                  rules={[
                    {
                      required: true,
                      message: '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å!',
                    },
                    {
                      min: 6,
                      message: '–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 6 —Å–∏–º–≤–æ–ª–æ–≤!',
                    },
                  ]}
                >
                  <Input.Password
                    prefix={<LockOutlined />}
                    placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –ø–∞—Ä–æ–ª—å"
                    autoComplete="current-password"
                    disabled={loading}
                  />
                </Form.Item>

                <Form.Item>
                  <div className="login-options">
                    <Form.Item
                      name="remember"
                      valuePropName="checked"
                      noStyle
                    >
                      <Checkbox disabled={loading}>
                        –ó–∞–ø–æ–º–Ω–∏—Ç—å –º–µ–Ω—è
                      </Checkbox>
                    </Form.Item>

                    <Link to="/forgot-password" className="forgot-password">
                      –ó–∞–±—ã–ª–∏ –ø–∞—Ä–æ–ª—å?
                    </Link>
                  </div>
                </Form.Item>

                <Form.Item>
                  <Button
                    type="primary"
                    htmlType="submit"
                    className="login-button"
                    loading={loading}
                    disabled={loading}
                    block
                  >
                    {loading ? '–í—Ö–æ–¥...' : '–í–æ–π—Ç–∏'}
                  </Button>
                </Form.Item>

                <div className="login-footer">
                  <Text type="secondary">
                    –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞?{' '}
                    <Link to="/register">–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è</Link>
                  </Text>
                </div>
              </Form>
            </Card>
          </div>
        </div>
      </div>
    </div>
  );
};

export default Login;